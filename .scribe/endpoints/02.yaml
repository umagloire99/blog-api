name: Tags
description: |-

  APIs for Tag.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tags
    metadata:
      groupName: Tags
      groupDescription: |-

        APIs for Tag.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the tags.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of results per page. Defaults to 10.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search term to filter blog posts.'
        required: false
        example: Laravel
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 2
      per_page: 5
      search: Laravel
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":true,"message":"Tags successully retrieved.","data":{"current_page":2,"data":[],"first_page_url":"https:\/\/blog-api.test\/api\/tags?query=Laravel&page=1","from":null,"last_page":1,"last_page_url":"https:\/\/blog-api.test\/api\/tags?query=Laravel&page=1","links":[{"url":"https:\/\/blog-api.test\/api\/tags?query=Laravel&page=1","label":"&laquo; Previous","active":false},{"url":"https:\/\/blog-api.test\/api\/tags?query=Laravel&page=1","label":"1","active":false},{"url":null,"label":"Next &raquo;","active":false}],"next_page_url":null,"path":"https:\/\/blog-api.test\/api\/tags","per_page":15,"prev_page_url":"https:\/\/blog-api.test\/api\/tags?query=Laravel&page=1","to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tags/store
    metadata:
      groupName: Tags
      groupDescription: |-

        APIs for Tag.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created tag in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The unique name of the tag.'
        required: true
        example: Laravel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Laravel
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E4dhVe8faPv516bkaZD6c3g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tags/{slug}/update'
    metadata:
      groupName: Tags
      groupDescription: |-

        APIs for Tag.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified tag in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the tag.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      slug: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The unique name of the tag.'
        required: true
        example: Laravel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Laravel
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hfZ5dckaD1Vg8vbPe64E63a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tags/{slug}/destroy'
    metadata:
      groupName: Tags
      groupDescription: |-

        APIs for Tag.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified tag from storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the tag.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      slug: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZV1ahag5kdE3fb4v668cePD'
    controller: null
    method: null
    route: null
    custom: []
