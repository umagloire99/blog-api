name: Posts
description: |-

  APIs for posts.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the posts.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of results per page. Defaults to 10.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search term to filter blog posts.'
        required: false
        example: Laravel
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'tags[]':
        name: 'tags[]'
        description: 'Array of tags slug to filter posts.'
        required: false
        example: 'tags[]=laravel&tags[]=php'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 2
      per_page: 5
      search: Laravel
      'tags[]': 'tags[]=laravel&tags[]=php'
    bodyParameters:
      page:
        name: page
        description: 'The page number for pagination. Must be at least 1.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of results per page. Defaults to 10. Must be at least 1. Must not be greater than 100.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search term to filter blog posts.'
        required: false
        example: Laravel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tags:
        name: tags
        description: 'Filter blog posts based on tags. The <code>slug</code> of an existing record in the tags table.'
        required: false
        example:
          - tag-1
          - tag-2
          - tag-3
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      page: 2
      per_page: 5
      search: Laravel
      tags:
        - tag-1
        - tag-2
        - tag-3
    fileParameters: []
    responses:
      -
        status: 403
        content: |-
          {
              "message": "This action is unauthorized.",
              "exception": "Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException",
              "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php",
              "line": 639,
              "trace": [
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php",
                      "line": 583,
                      "function": "prepareException",
                      "class": "Illuminate\\Foundation\\Exceptions\\Handler",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/nunomaduro/collision/src/Adapters/Laravel/ExceptionHandler.php",
                      "line": 54,
                      "function": "render",
                      "class": "Illuminate\\Foundation\\Exceptions\\Handler",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
                      "line": 51,
                      "function": "render",
                      "class": "NunoMaduro\\Collision\\Adapters\\Laravel\\ExceptionHandler",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 146,
                      "function": "handleException",
                      "class": "Illuminate\\Routing\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php",
                      "line": 51,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Routing\\Middleware\\SubstituteBindings",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 119,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 807,
                      "function": "then",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 786,
                      "function": "runRouteWithinStack",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 750,
                      "function": "runRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 739,
                      "function": "dispatchToRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 201,
                      "function": "dispatch",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 144,
                      "function": "Illuminate\\Foundation\\Http\\{closure}",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php",
                      "line": 31,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php",
                      "line": 51,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TrimStrings",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Http/Middleware/ValidatePostSize.php",
                      "line": 27,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Http\\Middleware\\ValidatePostSize",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php",
                      "line": 110,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php",
                      "line": 62,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Http\\Middleware\\HandleCors",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php",
                      "line": 58,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Http\\Middleware\\TrustProxies",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/InvokeDeferredCallbacks.php",
                      "line": 22,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\InvokeDeferredCallbacks",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 119,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 176,
                      "function": "then",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 145,
                      "function": "sendRequestThroughRouter",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 310,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 298,
                      "function": "callLaravelOrLumenRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 91,
                      "function": "makeApiCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 44,
                      "function": "makeResponseCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 35,
                      "function": "makeResponseCallIfConditionsPass",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 237,
                      "function": "__invoke",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 163,
                      "function": "iterateThroughStrategies",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 95,
                      "function": "fetchResponses",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 125,
                      "function": "processRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 72,
                      "function": "extractEndpointsInfoFromLaravelApp",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 50,
                      "function": "extractEndpointsInfoAndWriteToDisk",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php",
                      "line": 53,
                      "function": "get",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 36,
                      "function": "handle",
                      "class": "Knuckles\\Scribe\\Commands\\GenerateDocumentation",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Container/Util.php",
                      "line": 43,
                      "function": "Illuminate\\Container\\{closure}",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 95,
                      "function": "unwrapIfClosure",
                      "class": "Illuminate\\Container\\Util",
                      "type": "::"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 35,
                      "function": "callBoundMethod",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Container/Container.php",
                      "line": 694,
                      "function": "call",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 213,
                      "function": "call",
                      "class": "Illuminate\\Container\\Container",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/symfony/console/Command/Command.php",
                      "line": 279,
                      "function": "execute",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 182,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Command\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/symfony/console/Application.php",
                      "line": 1094,
                      "function": "run",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/symfony/console/Application.php",
                      "line": 342,
                      "function": "doRunCommand",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/symfony/console/Application.php",
                      "line": 193,
                      "function": "doRun",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php",
                      "line": 198,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Application.php",
                      "line": 1205,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Console\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/artisan",
                      "line": 13,
                      "function": "handleCommand",
                      "class": "Illuminate\\Foundation\\Application",
                      "type": "->"
                  }
              ]
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{slug}'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the post.'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      slug: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Post] 13",
              "exception": "Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException",
              "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php",
              "line": 635,
              "trace": [
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Exceptions/Handler.php",
                      "line": 583,
                      "function": "prepareException",
                      "class": "Illuminate\\Foundation\\Exceptions\\Handler",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/nunomaduro/collision/src/Adapters/Laravel/ExceptionHandler.php",
                      "line": 54,
                      "function": "render",
                      "class": "Illuminate\\Foundation\\Exceptions\\Handler",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php",
                      "line": 51,
                      "function": "render",
                      "class": "NunoMaduro\\Collision\\Adapters\\Laravel\\ExceptionHandler",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 188,
                      "function": "handleException",
                      "class": "Illuminate\\Routing\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 119,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 807,
                      "function": "then",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 786,
                      "function": "runRouteWithinStack",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 750,
                      "function": "runRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 739,
                      "function": "dispatchToRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 201,
                      "function": "dispatch",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 144,
                      "function": "Illuminate\\Foundation\\Http\\{closure}",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php",
                      "line": 31,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php",
                      "line": 51,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TrimStrings",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Http/Middleware/ValidatePostSize.php",
                      "line": 27,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Http\\Middleware\\ValidatePostSize",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php",
                      "line": 110,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php",
                      "line": 62,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Http\\Middleware\\HandleCors",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php",
                      "line": 58,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Http\\Middleware\\TrustProxies",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/InvokeDeferredCallbacks.php",
                      "line": 22,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 183,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\InvokeDeferredCallbacks",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 119,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 176,
                      "function": "then",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 145,
                      "function": "sendRequestThroughRouter",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 310,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 298,
                      "function": "callLaravelOrLumenRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 91,
                      "function": "makeApiCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 44,
                      "function": "makeResponseCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 35,
                      "function": "makeResponseCallIfConditionsPass",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 237,
                      "function": "__invoke",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 163,
                      "function": "iterateThroughStrategies",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 95,
                      "function": "fetchResponses",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 125,
                      "function": "processRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 72,
                      "function": "extractEndpointsInfoFromLaravelApp",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 50,
                      "function": "extractEndpointsInfoAndWriteToDisk",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php",
                      "line": 53,
                      "function": "get",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 36,
                      "function": "handle",
                      "class": "Knuckles\\Scribe\\Commands\\GenerateDocumentation",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Container/Util.php",
                      "line": 43,
                      "function": "Illuminate\\Container\\{closure}",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 95,
                      "function": "unwrapIfClosure",
                      "class": "Illuminate\\Container\\Util",
                      "type": "::"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 35,
                      "function": "callBoundMethod",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Container/Container.php",
                      "line": 694,
                      "function": "call",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 213,
                      "function": "call",
                      "class": "Illuminate\\Container\\Container",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/symfony/console/Command/Command.php",
                      "line": 279,
                      "function": "execute",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 182,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Command\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/symfony/console/Application.php",
                      "line": 1094,
                      "function": "run",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/symfony/console/Application.php",
                      "line": 342,
                      "function": "doRunCommand",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/symfony/console/Application.php",
                      "line": 193,
                      "function": "doRun",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php",
                      "line": 198,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/vendor/laravel/framework/src/Illuminate/Foundation/Application.php",
                      "line": 1205,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Console\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/Users/umagloire/Sites/Freelance/blog-api/artisan",
                      "line": 13,
                      "function": "handleCommand",
                      "class": "Illuminate\\Foundation\\Application",
                      "type": "->"
                  }
              ]
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts/store
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created post in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the post. Must not be greater than 255 characters.'
        required: true
        example: 'A Sample Blog Post'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      content:
        name: content
        description: 'The  content of the post.'
        required: true
        example: 'This is the body of the blog post.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tags:
        name: tags
        description: 'An array of tag IDs associated with the post. The <code>id</code> of an existing record in the tags table.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: 'A single image file to be used as the main image for the post. Must be a file. Must not be greater than 5120 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gallery:
        name: gallery
        description: 'Each file in the gallery. Allowed formats are images (jpg, png) or videos (mp4, avi, mov). Must be a file. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'A Sample Blog Post'
      content: 'This is the body of the blog post.'
      tags:
        - 1
        - 2
        - 3
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/posts/{slug}/update'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the post.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      slug: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the post. Must not be greater than 255 characters.'
        required: true
        example: 'A Sample Blog Post'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      content:
        name: content
        description: 'The  content of the post.'
        required: true
        example: 'This is the body of the blog post.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      tags:
        name: tags
        description: 'An array of tag IDs associated with the post. The <code>id</code> of an existing record in the tags table.'
        required: false
        example:
          - 1
          - 2
          - 3
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: 'A single image file to be used as the main image for the post. Must be a file. Must not be greater than 5120 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gallery:
        name: gallery
        description: 'Each file in the gallery. Allowed formats are images (jpg, png) or videos (mp4, avi, mov). Must be a file. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'A Sample Blog Post'
      content: 'This is the body of the blog post.'
      tags:
        - 1
        - 2
        - 3
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{slug}/destroy'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for posts.
      subgroup: ''
      subgroupDescription: ''
      title: destroy
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      slug:
        name: slug
        description: 'The slug of the post.'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      slug: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{post_slug}/comments'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for posts.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Post comments'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_slug:
        name: post_slug
        description: 'The slug of the post.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      post_slug: 6
    queryParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of results per page. Defaults to 10.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 2
      per_page: 5
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/posts/{post_slug}/comments/add'
    metadata:
      groupName: Posts
      groupDescription: |-

        APIs for posts.
      subgroup: ''
      subgroupDescription: ''
      title: addComment
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      post_slug:
        name: post_slug
        description: 'The slug of the post.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      post_slug: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The content of the comment.'
        required: true
        example: 'This is a great post!'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      content: 'This is a great post!'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
